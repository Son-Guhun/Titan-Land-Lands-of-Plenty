"""
This script iterates over all units in a .ini database and generates the UnitModels jass library. This library is then copied to the user's clipboard.

The UnitModels library is used to get the model file of any unit type.

"""
import os
import sys
sys.path.insert(1, os.path.join(sys.path[0], '..'))
#______________________________________________________________________________________________

from myconfigparser import load_unit_data, get_decorations, Section
import pyperclip

file_path = '../../development/table/unit.ini'

def get_models(unit_data):
    result = [HEADER]
    for u in unit_data:
        unit = Section(unit_data[u])
        file = unit['file'][1:-1]
        try:
            file = unit['file'][1:-1]
            if file[-4] != '.':
                file = file + '.mdx'
            result.append(f"        set d.string['{u}']=\"{file}\"")
        except:
            print("Could not find model data for {}.".format(u))
    result.append(FOOTER)
    return '\n'.join(result)

def do(file_path=file_path):
    f = open(file_path)
    unit_data = load_unit_data(f)
    
    pyperclip.copy(get_models(unit_data))
    
    
HEADER = '''library UnitModels requires TableStruct
/*
    This library is automatically generated by the following python script file:
        _scripts/paste/unitmodels.py
        
    To generate it, simply execute the python file in an interactive console and call the do() function.
Then delete all contents in this trigger and paste from your clipboard.
*/

struct UnitModels extends array
    //! runtextmacro TableStruct_NewConstTableField("private", "d")
    
    static method operator [] takes integer rawcode returns string
        return d.string[rawcode]
    endmethod
    
    static method onInit takes nothing returns nothing'''

FOOTER = '''    endmethod
endstruct


endlibrary'''